name: Transmitir

on:
  workflow_dispatch:
    inputs:
      artefato_url:
        description: 'URL do artefato (API)'
        required: true

jobs:
  baixar_e_transmitir:
    runs-on: ubuntu-latest

    steps:
      - name: 🔁 Clonar repositório
        uses: actions/checkout@v4

      - name: 🧠 Corrigir URL se necessário
        id: corrigir
        run: |
          INPUT_URL="${{ github.event.inputs.artefato_url }}"
          if [[ "$INPUT_URL" == https://github.com/* ]]; then
            CORRIGIDA=$(echo "$INPUT_URL" | sed 's|https://github.com/|https://api.github.com/repos/|' | sed 's|/actions/artifacts/|/actions/artifacts/|' | sed 's|/zip||')
            echo "🔁 URL corrigida para: $CORRIGIDA"
          else
            CORRIGIDA="$INPUT_URL"
          fi
          echo "url_corrigida=$CORRIGIDA" >> "$GITHUB_OUTPUT"

      - name: 📥 Baixando artefato zipado via API
        run: |
          echo "🔗 Baixando artefato de: ${{ steps.corrigir.outputs.url_corrigida }}"
          curl -L \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/zip" \
            "${{ steps.corrigir.outputs.url_corrigida }}" \
            -o artefato.zip

      - name: 📦 Descompactar artefato
        run: |
          mkdir -p artefatos/video_final
          unzip artefato.zip -d artefatos/video_final || {
            echo "❌ Erro ao descompactar. Verifique se o link é válido ou se o artefato expirou."
            exit 1
          }

      - name: 📂 Listar conteúdo do artefato
        run: |
          echo "📁 Conteúdo extraído:"
          find artefatos/video_final -type f

      - name: 🧰 Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 🎬 Instalar FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: 🚀 Iniciar Transmissão com transmitir.js
        run: |
          echo "🚀 Iniciando transmissão com transmitir.js..."
          node transmitir.js

      - name: 🧹 Deletar artefato após transmissão
        env:
          GH_TOKEN: ${{ secrets.LIVE_DELETE_TOKEN }}
        run: |
          echo "🧼 Iniciando exclusão do artefato remoto..."
          artefato_id=$(echo "${{ steps.corrigir.outputs.url_corrigida }}" | grep -oP 'artifacts/\K[0-9]+')
          if [ -z "$artefato_id" ]; then
            echo "❌ Não foi possível extrair o ID do artefato. Abortando."
            exit 1
          fi
          echo "🆔 ID do artefato: $artefato_id"

          curl -X DELETE \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/Miraplay2025/Live/actions/artifacts/$artefato_id" || {
              echo "❌ Falha ao deletar artefato."
              exit 1
          }

          echo "✅ Artefato $artefato_id excluído com sucesso."
