name: Transmitir Vídeo

on:
  workflow_dispatch:
    inputs:
      artefato_url:
        description: 'URL do artefato com os vídeos .ts e metadados'
        required: true
        type: string

jobs:
  transmitir:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Baixar artefato ZIP do link enviado
        run: |
          echo "🔗 Baixando artefato de: ${{ inputs.artefato_url }}"
          curl -L "${{ inputs.artefato_url }}" -o artefato.zip

      - name: 📦 Descompactar artefato
        run: |
          mkdir -p artefatos/video_final
          unzip artefato.zip -d artefatos/video_final || {
            echo "❌ Erro ao descompactar. Verifique se o link é válido ou se o artefato expirou.";
            exit 1;
          }

      - name: 📁 Verificar estrutura dos arquivos extraídos
        run: |
          echo "📂 Listando estrutura completa do artefato:"
          find artefatos/video_final -type f

      - name: 📄 Mostrar conteúdo do ts_paths.json
        run: |
          echo "📝 Conteúdo de ts_paths.json:"
          cat artefatos/video_final/ts_paths.json || echo "❌ ts_paths.json não encontrado"

      - name: 📄 Mostrar conteúdo do stream_info.json
        run: |
          echo "📝 Conteúdo de stream_info.json:"
          cat artefatos/video_final/stream_info.json || echo "❌ stream_info.json não encontrado"

      - name: 📦 Tamanho total dos arquivos
        run: |
          echo "📏 Tamanho total dos arquivos extraídos:"
          du -sh artefatos/video_final || echo "⚠️ Erro ao calcular tamanho"

      - name: 🔍 Mostrar primeiros bytes de cada .ts
        run: |
          echo "🔍 Primeiros bytes de cada vídeo .ts:"
          for f in artefatos/video_final/*.ts; do
            echo "--- $(basename "$f") ---"
            head -c 256 "$f" | hexdump -C
            echo ""
          done

      - name: 📡 Pronto para transmissão (ainda não iniciada)
        run: |
          echo "✅ Artefatos preparados. Transmissão pode ser iniciada agora via ffmpeg ou outro sistema."
